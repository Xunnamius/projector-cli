{
  "name": "@xunnamius/dummy-pkg-2",
  "version": "1.0.6",
  "private": false,
  "description": "A dummy package used for testing workflow pipelines. Not to be installed!",
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/projector-lens-cli",
    "lens": "cli"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    ".": {
      "import": "./dist/esm/index.mjs",
      "require": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "main": "./dist/index.js",
  "module": "./dist/esm/index.mjs",
  "types": "./dist/types/src/index.d.ts",
  "bin": {
    "dummy-pkg-2": "./dist/cli.js"
  },
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "expect-env": {
    "errorMessage": "\nCopy the \".env.example\" file to \".env\" or define the appropriate repository secrets",
    "rules": []
  },
  "scripts": {
    "build": "npm run build-dist --",
    "build-changelog": "conventional-changelog --outfile CHANGELOG.md --preset angular --config .changelogrc.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./.changelogrc.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && remark -o --use reference-links --use gfm --use frontmatter CHANGELOG.md && prettier --write CHANGELOG.md",
    "build-dist": "NODE_ENV=production tsc --project tsconfig.types.json && NODE_ENV=production webpack --config-name lib && if [ -r ./src/cli.ts ]; then NODE_ENV=production webpack --config-name cli && chmod +x ./dist/cli.js; fi && NODE_ENV=esm babel src --extensions .ts --out-dir dist/esm --out-file-extension .mjs",
    "build-docs": "ENTRY=`node -e 'console.log((x => typeof x==\"string\"?x:x.default)(require(\"./package.json\").exports[\".\"]).replace(/\\.\\/dist\\/(.+)\\.[a-zA-Z0-9]+$/, \"./src/$1.ts\"))'` && echo 'Entry file:' \"$ENTRY\" && typedoc --plugin typedoc-plugin-markdown --out docs --readme none $ENTRY && find docs -name '*.md' -exec sed -i -e 's/`__namedParameters`: //g' {} + && find docs -name '*.md' -exec sed -i -E 's/^.\\s*(\\*\\*)?__namedParameters(\\*\\*)?/`\\(destructured\\)/gm' {} + && find docs -name '*.md' -exec sed -i -E 's/^.\\s*\\(destructured\\)\\.([a-zA-Z0-9_?-]+)/`\\({ \\1 }\\)/gm' {} + && find docs -name '*.md' -exec sed -i -e 's/Project: //g' {} + && sed -i -e 1,4d docs/README.md",
    "build-stats": "NODE_ENV=production webpack --json > bundle-stats.ignore.json",
    "clean": "rm -rf dist coverage external-scripts/bin bundle-stats.ignore.json",
    "format": "sort-package-json && remark -o --use reference-links --use gfm --use frontmatter . && prettier --write .",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json src; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions .; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))'",
    "prepare": "if [ -z \"$CI\" ]; then npx husky install; else echo 'skipped installing husky git hooks'; fi",
    "test": "npm run test-unit --",
    "test-integration": "BABEL_ENV=test jest $JEST_CLI --testPathIgnorePatterns test/unit-*.test.ts",
    "test-integration-client": "BABEL_ENV=test jest $JEST_CLI test/integration-client*.test.ts",
    "test-integration-node": "BABEL_ENV=test jest $JEST_CLI test/integration-node*.test.ts",
    "test-integration-webpack": "BABEL_ENV=test jest $JEST_CLI test/integration-webpack*.test.ts",
    "test-unit": "BABEL_ENV=test jest $JEST_CLI --coverage --collectCoverageFrom 'src/**/*.ts' --collectCoverageFrom 'lib/**/*.ts' --collectCoverageFrom 'external-scripts/**/*.ts' --testPathIgnorePatterns test/integration-*.test.ts"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-leading-blank": [
        2,
        "always"
      ],
      "footer-leading-blank": [
        2,
        "always"
      ],
      "type-enum": [
        2,
        "always",
        [
          "feat",
          "fix",
          "docs",
          "style",
          "refactor",
          "test",
          "revert",
          "debug",
          "build",
          "chore"
        ]
      ]
    }
  },
  "lint-staged": {
    "*.md": "remark -o --use reference-links --use gfm --use frontmatter",
    "package.json": "sort-package-json",
    "*": "prettier --write --ignore-unknown"
  },
  "prettier": {
    "endOfLine": "lf",
    "printWidth": 80,
    "proseWrap": "always",
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "none",
    "overrides": [
      {
        "files": "**/*.@(ts|?(@(c|m))js)?(x)",
        "options": {
          "parser": "babel-ts",
          "printWidth": 90
        }
      }
    ]
  },
  "jest": {
    "setupFilesAfterEnv": [
      "./test/setup.ts"
    ],
    "testEnvironment": "node",
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "testRunner": "jest-circus/runner",
    "testTimeout": 60000,
    "verbose": false
  },
  "dependencies": {
    "debug": "^4.3.4",
    "yargs": "^17.6.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.20.7",
    "@babel/core": "^7.20.7",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/plugin-proposal-export-default-from": "^7.18.10",
    "@babel/plugin-proposal-function-bind": "^7.18.9",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-typescript": "^7.18.6",
    "@commitlint/cli": "^17.3.0",
    "@commitlint/config-conventional": "^17.3.0",
    "@ergodark/types": "^1.0.17",
    "@semantic-release/changelog": "^6.0.2",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/debug": "^4.1.7",
    "@types/jest": "^29.2.5",
    "@types/node": "^18.11.18",
    "@types/webpack": "^5.28.0",
    "@types/yargs": "^17.0.18",
    "@typescript-eslint/eslint-plugin": "^5.48.0",
    "@typescript-eslint/parser": "^5.48.0",
    "babel-jest": "^29.3.1",
    "babel-loader": "^9.1.0",
    "babel-plugin-add-import-extension": "^1.6.0",
    "babel-plugin-source-map-support": "^2.2.0",
    "babel-plugin-transform-default-named-imports": "^1.2.2",
    "babel-plugin-transform-rename-import": "^2.3.0",
    "confusing-browser-globals": "^1.0.11",
    "conventional-changelog-angular": "^5.0.13",
    "conventional-changelog-cli": "^2.2.2",
    "dotenv": "^16.0.3",
    "escape-string-regexp": "^5.0.0",
    "eslint": "^8.31.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^27.2.0",
    "execa": "^6.1.0",
    "husky": "^8.0.3",
    "jest": "^29.3.1",
    "jest-circus": "^29.3.1",
    "jest-extended": "^3.2.1",
    "lint-staged": "^13.1.0",
    "prettier": "^2.8.1",
    "remark-cli": "^11.0.0",
    "remark-frontmatter": "^4.0.1",
    "remark-gfm": "^3.0.1",
    "remark-lint-final-newline": "^2.1.1",
    "remark-lint-hard-break-spaces": "^3.1.1",
    "remark-lint-no-auto-link-without-protocol": "^3.1.1",
    "remark-lint-no-blockquote-without-marker": "^5.1.1",
    "remark-lint-no-duplicate-definitions": "^3.1.1",
    "remark-lint-no-heading-content-indent": "^4.1.1",
    "remark-lint-no-inline-padding": "^4.1.1",
    "remark-lint-no-undefined-references": "^4.2.0",
    "remark-lint-no-unused-definitions": "^3.1.1",
    "remark-lint-ordered-list-marker-style": "^3.1.1",
    "remark-reference-links": "^6.0.1",
    "semantic-release": "https://xunn.at/semantic-release-atam",
    "semver": "^7.3.8",
    "simple-git": "^3.15.1",
    "sort-package-json": "^2.10.0",
    "source-map-support": "^0.5.21",
    "spellchecker": "^3.7.1",
    "text-extensions": "^2.4.0",
    "typedoc": "^0.23.23",
    "typedoc-plugin-markdown": "^3.14.0",
    "typescript": "^4.9.4",
    "unique-filename": "^3.0.0",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1",
    "webpack-node-externals": "^3.0.0"
  },
  "engines": {
    "node": ">=12.x"
  },
  "publishConfig": {
    "access": "public"
  }
}
